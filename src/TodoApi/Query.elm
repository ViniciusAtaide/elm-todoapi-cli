-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module TodoApi.Query exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import TodoApi.InputObject
import TodoApi.Interface
import TodoApi.Object
import TodoApi.Scalar
import TodoApi.ScalarCodecs
import TodoApi.Union


users :
    SelectionSet decodesTo TodoApi.Object.User
    -> SelectionSet (List decodesTo) RootQuery
users object____ =
    Object.selectionForCompositeField "users" [] object____ (Basics.identity >> Decode.list)


type alias UserRequiredArguments =
    { id : Int }


user :
    UserRequiredArguments
    -> SelectionSet decodesTo TodoApi.Object.User
    -> SelectionSet (Maybe decodesTo) RootQuery
user requiredArgs____ object____ =
    Object.selectionForCompositeField "user" [ Argument.required "id" requiredArgs____.id Encode.int ] object____ (Basics.identity >> Decode.nullable)


todos :
    SelectionSet decodesTo TodoApi.Object.Todo
    -> SelectionSet (List decodesTo) RootQuery
todos object____ =
    Object.selectionForCompositeField "todos" [] object____ (Basics.identity >> Decode.list)


type alias TodoRequiredArguments =
    { id : Int }


todo :
    TodoRequiredArguments
    -> SelectionSet decodesTo TodoApi.Object.Todo
    -> SelectionSet (Maybe decodesTo) RootQuery
todo requiredArgs____ object____ =
    Object.selectionForCompositeField "todo" [ Argument.required "id" requiredArgs____.id Encode.int ] object____ (Basics.identity >> Decode.nullable)
